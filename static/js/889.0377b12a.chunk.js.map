{"version":3,"file":"static/js/889.0377b12a.chunk.js","mappings":"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","sources":["hooks/schemaProfile.js","hooks/datePicker.js","webpack://goose-track/./src/components/UserProfile/userProfile.module.scss?fed2","components/UserProfile/UserProfile.jsx","pages/AccountPage/AccountPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const profileSchema = Yup.object({\n  name: Yup.string().max(16, 'Must be 16 characters or less').required(),\n  phone: Yup.string().matches(\n    /(?=.*\\+[0-9]{3}\\s?[0-9]{2}\\s?[0-9]{3}\\s?[0-9]{4,5}$)/,\n    'invalid phone number format'\n  ),\n  birthday: Yup.date().default(() => new Date()),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  skype: Yup.string()\n    .min(6, 'Must be 6 characters or more')\n    .max(16, 'Must be 16 characters or less'),\n});\n","import { getYear } from 'date-fns';\nimport range from 'lodash/range';\n\nexport const years = range(1923, getYear(new Date()) + 1, 1);\n\nexport const months = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport const weekendDay = date => {\n  const day = date.getDay();\n  return day === 0 || day === 6; // Sunday and Saturday\n};\n\nexport const weekendDayClassName = 'weekend-day';\n","// extracted by mini-css-extract-plugin\nexport default {\"userContainer\":\"userProfile_userContainer__rNFTM\",\"userWrapper\":\"userProfile_userWrapper__7L5SM\",\"formAvatar\":\"userProfile_formAvatar__L+UBj\",\"containerAvatar\":\"userProfile_containerAvatar__HQl9m\",\"avatarImage\":\"userProfile_avatarImage__PS3tk\",\"inputUpload\":\"userProfile_inputUpload__QYY2l\",\"btnUpload\":\"userProfile_btnUpload__QtKNo\",\"avatarName\":\"userProfile_avatarName__S+TOX\",\"avatarRole\":\"userProfile_avatarRole__norpC\",\"formCenter\":\"userProfile_formCenter__5hmyK\",\"formRow\":\"userProfile_formRow__1Mais\",\"formLabel\":\"userProfile_formLabel__fO97x\",\"formInput\":\"userProfile_formInput__p9XMq\",\"formBtn\":\"userProfile_formBtn__JIyAl\",\"formError\":\"userProfile_formError__mdITL\",\"pickerBox\":\"userProfile_pickerBox__yFTtP\",\"iconCalendar\":\"userProfile_iconCalendar__LoD9t\",\"dateIcon\":\"userProfile_dateIcon__bZ4WM\",\"iconCalendarWrapeer\":\"userProfile_iconCalendarWrapeer__yc9eL\",\"customCalendarStyle\":\"userProfile_customCalendarStyle__1Ipi2\"};","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage, Form } from 'formik';\nimport Notiflix from 'notiflix';\nimport { FiPlus, FiChevronDown } from 'react-icons/fi';\nimport { AiOutlineUser } from 'react-icons/ai';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { getMonth, getYear } from 'date-fns';\nimport { profileSchema } from 'hooks/schemaProfile';\nimport {\n  years,\n  months,\n  weekendDay,\n  weekendDayClassName,\n} from 'hooks/datePicker';\nimport {\n  getCurrentUserThunk,\n  updateAvatarThunk,\n  updateUserThunk,\n} from 'redux/auth/authOperations';\nimport { getUser } from 'redux/auth/authSelectors';\nimport './DatePickerStyles.scss';\nimport css from './userProfile.module.scss';\n\nconst UserProfile = () => {\n  const user = useSelector(getUser);\n  const [newAvatar, setNewAvatar] = useState(null);\n  const [updated, setUpdated] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (updated) {\n      dispatch(getCurrentUserThunk());\n      setUpdated(false);\n    }\n  }, [dispatch, updated]);\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const avatarData = new FormData();\n    avatarData.append('avatar', newAvatar);\n\n    const profileData = {\n      name: values.name.trim(),\n      birthday: values.birthday,\n      // email: values.email.trim(),\n      phone: values.phone.trim(),\n      skype: values.skype.trim(),\n    };\n\n    try {\n      newAvatar && (await dispatch(updateAvatarThunk(avatarData)));\n\n      (values.name.trim() !== user.name ||\n        values.birthday.toISOString() !== user.birthday ||\n      //   values.email.trim() !== user.email ||\n        values.phone.trim() !== user.phone ||\n        values.skype.trim() !== user.skype) &&\n        (await dispatch(updateUserThunk(profileData)));\n\n      Notiflix.Notify.success('User profile is succesfully updated');\n      setUpdated(true);\n      resetForm();\n    } catch (error) {\n      Notiflix.Notify.failure('Something went wrong. Please try again');\n    }\n  };\n\n  return (\n    <div className={css.userContainer}>\n      <div className={css.userWrapper}>\n        <Formik\n          enableReinitialize\n          initialValues={{\n            name: user.name || '',\n            phone: user.phone ? user.phone : '',\n            birthday: user.birthday ? new Date(user.birthday) : new Date(),\n            skype: user ? user.skype : '',\n            email: user ? user.email : '',\n          }}\n          validationSchema={profileSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ values, handleChange, handleBlur, handleSubmit }) => (\n            <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <div className={css.formAvatar}>\n                <div className={css.containerAvatar}>\n                  {newAvatar ? (\n                    <img\n                      src={URL.createObjectURL(newAvatar)}\n                      className={css.avatarImage}\n                      accept=\"image/*,.png,.jpeg,.jpg,.gif,.web\"\n                      alt=\"avatar\"\n                    />\n                  ) : user?.avatarURL ? (\n                    <img\n                      src={user?.avatarURL}\n                      className={css.avatarImage}\n                      alt=\"avatar\"\n                    />\n                  ) : (\n                    <AiOutlineUser className={css.avatarIcon} />\n                  )}\n\n                  <label>\n                    <button className={css.btnUpload}>\n                      <FiPlus />\n                    </button>\n\n                    <input\n                      className={css.inputUpload}\n                      id=\"avatar\"\n                      type=\"file\"\n                      accept=\"image/*,.png,.jpeg,.jpg,.gif,.web\"\n                      onChange={e => {\n                        setNewAvatar(e.target.files[0]);\n                        handleChange(e);\n                      }}\n                    ></input>\n                  </label>\n                </div>\n\n                <h3 className={css.avatarName}>\n                  {user.name ? user.name : 'No name'}\n                </h3>\n\n                <p className={css.avatarRole}>User</p>\n              </div>\n\n              <div className={css.formCenter}>\n                <div className={css.formRow}>\n                  <label className={css.formLabel}>\n                    User Name\n                    <input\n                      className={css.formInput}\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder=\"Name\"\n                      value={values.name}\n                      onChange={e => {\n                        handleChange(e);\n                      }}\n                      onBlur={handleBlur}\n                    ></input>\n                    <ErrorMessage\n                      className={css.formError}\n                      component=\"div\"\n                      name=\"name\"\n                    />\n                  </label>\n                </div>\n\n                <div className={css.formRow}>\n                  <label className={css.formLabel}>\n                    Birthday\n                    <div className={css.pickerBox}>\n                      <div className={css.iconCalendarWrapeer}></div>\n\n                      <DatePicker\n                        id=\"date\"\n                        type=\"date\"\n                        name=\"birthday\"\n                        input={true}\n                        className={css.formInput}\n                        dayClassName={date =>\n                          weekendDay(date) ? weekendDayClassName : undefined\n                        }\n                        calendarClassName={css.customCalendarStyle}\n                        formatWeekDay={nameOfDay => nameOfDay.slice(0, 1)}\n                        selected={values.birthday}\n                        onChange={date => {\n                          handleChange({\n                            target: { name: 'birthday', value: date },\n                          });\n                        }}\n                        dateFormat=\"dd/MM/yyyy\"\n                        calendarStartDay={1}\n                        closeOnScroll={e => e.target === document}\n                        renderCustomHeader={({\n                          date,\n                          changeYear,\n                          changeMonth,\n                        }) => (\n                          <div\n                            style={{\n                              display: 'flex',\n                              justifyContent: 'center',\n                              marginBottom: 10,\n                            }}\n                          >\n                            <select\n                              style={{\n                                color: '#111111',\n                                padding: 5,\n                                marginLeft: 5,\n                                marginRight: 5,\n                                borderRadius: 5,\n                              }}\n                              value={months[getMonth(date)]}\n                              onChange={({ target: { value } }) =>\n                                changeMonth(months.indexOf(value))\n                              }\n                            >\n                              {months.map(option => (\n                                <option key={option} value={option}>\n                                  {option}\n                                </option>\n                              ))}\n                            </select>\n\n                            <select\n                              style={{\n                                color: '#111111',\n                                padding: 5,\n                                marginRight: 5,\n                                borderRadius: 5,\n                              }}\n                              value={getYear(date)}\n                              onChange={({ target: { value } }) =>\n                                changeYear(value)\n                              }\n                            >\n                              {years.map(option => (\n                                <option key={option} value={option}>\n                                  {option}\n                                </option>\n                              ))}\n                            </select>\n                          </div>\n                        )}\n                      />\n                      <FiChevronDown className={css.dateIcon} />\n                    </div>\n                    <ErrorMessage className={css.formError} name=\"birthday\" />\n                  </label>\n                </div>\n\n                <div className={css.formRow}>\n                  <label className={css.formLabel}>\n                    Email\n                    <input\n                      className={css.formInput}\n                      disabled\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={values.email}\n                      onChange={e => {\n                        handleChange(e);\n                      }}\n                      onBlur={handleBlur}\n                    ></input>\n                    <ErrorMessage\n                      className={css.formError}\n                      component=\"div\"\n                      name=\"email\"\n                    />\n                  </label>\n                </div>\n\n                <div className={css.formRow}>\n                  <label className={css.formLabel}>\n                    Phone\n                    <input\n                      className={css.formInput}\n                      type=\"tel\"\n                      name=\"phone\"\n                      placeholder=\"+380\"\n                      value={values.phone}\n                      onChange={e => {\n                        handleChange(e);\n                      }}\n                      onBlur={handleBlur}\n                    ></input>\n                    <ErrorMessage\n                      className={css.formError}\n                      component=\"div\"\n                      name=\"phone\"\n                    />\n                  </label>\n                </div>\n\n                <div className={css.formRow}>\n                  <label className={css.formLabel}>\n                    Skype\n                    <input\n                      className={css.formInput}\n                      type=\"text\"\n                      name=\"skype\"\n                      placeholder=\"Add a skype\"\n                      value={values.skype}\n                      onChange={e => {\n                        handleChange(e);\n                      }}\n                      onBlur={handleBlur}\n                    ></input>\n                    <ErrorMessage\n                      component=\"div\"\n                      className={css.formError}\n                      name=\"skype\"\n                    />\n                  </label>\n                </div>\n              </div>\n\n              <button\n                className={css.formBtn}\n                type=\"submit\"\n                disabled={\n                  values.name.trim() === '' ||\n                  values.email.trim() === '' ||\n                  (newAvatar === null &&\n                    values.birthday.toISOString() === user.birthday &&\n                    values.name.trim() === user.name &&\n                    values.email.trim() === user.email &&\n                    values.phone.trim() === user.phone &&\n                    values.skype.trim() === user.skype)\n                }\n              >\n                Save changes\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </div>\n  );\n};\nexport default UserProfile;\n","import UserProfile from 'components/UserProfile/UserProfile';\n\nconst AccountPage = () => {\n  return <UserProfile />;\n};\nexport default AccountPage;\n"],"names":["profileSchema","Yup","name","max","required","phone","matches","birthday","default","Date","email","skype","min","years","range","getYear","months","user","useSelector","getUser","useState","newAvatar","setNewAvatar","updated","setUpdated","dispatch","useDispatch","useEffect","getCurrentUserThunk","handleSubmit","values","resetForm","avatarData","FormData","append","profileData","trim","updateAvatarThunk","toISOString","updateUserThunk","Notiflix","className","css","enableReinitialize","initialValues","validationSchema","onSubmit","handleChange","handleBlur","autoComplete","src","URL","createObjectURL","accept","alt","avatarURL","id","type","onChange","e","target","files","placeholder","value","onBlur","component","input","dayClassName","date","day","getDay","weekendDay","undefined","calendarClassName","formatWeekDay","nameOfDay","slice","selected","dateFormat","calendarStartDay","closeOnScroll","document","renderCustomHeader","changeYear","changeMonth","style","display","justifyContent","marginBottom","color","padding","marginLeft","marginRight","borderRadius","getMonth","indexOf","map","option","disabled"],"sourceRoot":""}