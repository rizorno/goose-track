{"version":3,"file":"static/js/414.fe70acd2.chunk.js","mappings":"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","sources":["hooks/useDaysOfMonth.js","../node_modules/date-fns/esm/eachDayOfInterval/index.js","webpack://goose-track/./src/components/ChoosedMonth/MonthCalendarHead/monthCalendarHead.module.scss?0ea2","components/ChoosedMonth/MonthCalendarHead/MonthCalendarHead.jsx","../node_modules/date-fns/esm/isToday/index.js","hooks/fotmattedDay.js","webpack://goose-track/./src/components/ChoosedMonth/CalendarTable/TasksList/tasksList.module.scss?51dc","components/ChoosedMonth/CalendarTable/TasksList/TasksList.jsx","webpack://goose-track/./src/components/ChoosedMonth/CalendarTable/ModalTaskList/modalTaskList.module.scss?b962","components/ChoosedMonth/CalendarTable/ModalTaskList/ModalTaskList.jsx","webpack://goose-track/./src/components/ChoosedMonth/CalendarTable/DaysWithTasks/daysWithTasks.module.scss?6dee","components/ChoosedMonth/CalendarTable/DaysWithTasks/DaysWithTasks.jsx","webpack://goose-track/./src/components/ChoosedMonth/CalendarTable/calendarTable.module.scss?72cb","components/ChoosedMonth/CalendarTable/CalendarTable.jsx","webpack://goose-track/./src/components/ChoosedMonth/choosedMonth.module.scss?52cb","components/ChoosedMonth/ChoosedMonth.jsx"],"sourcesContent":["import { eachDayOfInterval } from 'date-fns';\nimport { endOfMonth, getDay, startOfMonth } from 'date-fns';\n\nexport const useDaysOfMonth = currentDate => {\n  const startMonth = startOfMonth(new Date(currentDate));\n\n  const endMonth = endOfMonth(new Date(currentDate));\n\n  const firstDayOfMonth = getDay(startMonth) - 1;\n\n  const daysOfMonth = eachDayOfInterval({ start: startMonth, end: endMonth });\n\n  return {\n    startMonth,\n    endMonth,\n    firstDayOfMonth,\n    daysOfMonth,\n  };\n};\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  var _options$step;\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = Number((_options$step = options === null || options === void 0 ? void 0 : options.step) !== null && _options$step !== void 0 ? _options$step : 1);\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n  return dates;\n}","// extracted by mini-css-extract-plugin\nexport default {\"monthHeadList\":\"monthCalendarHead_monthHeadList__I1dbF\",\"monthHeadItem\":\"monthCalendarHead_monthHeadItem__cZyzh\"};","import { useMediaQuery } from '@mui/material';\nimport css from './monthCalendarHead.module.scss';\n\nconst MonthCalendarHead = () => {\n  const screenMobile = useMediaQuery('(max-width: 767.9px)');\n\n  return (\n    <>\n      {screenMobile ? (\n        <ul className={css.monthHeadList}>\n          <li>M</li>\n          <li>T</li>\n          <li>W</li>\n          <li>T</li>\n          <li>F</li>\n          <li className={css.monthHeadItem}>S</li>\n          <li className={css.monthHeadItem}>S</li>\n        </ul>\n      ) : (\n        <ul className={css.monthHeadList}>\n          <li>Mon</li>\n          <li>Tue</li>\n          <li>Wed</li>\n          <li>Thu</li>\n          <li>Fri</li>\n          <li className={css.monthHeadItem}>Sat</li>\n          <li className={css.monthHeadItem}>Sun</li>\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MonthCalendarHead;\n","import isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","export const formattedDay = date => {\n  const day = date.split('-')[2];\n\n  return day.startsWith('0') ? day.slice(1) : day;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"tasksListStyle\":\"tasksList_tasksListStyle__W8q2E\",\"tasksListItem\":\"tasksList_tasksListItem__x1-jw\",\"lowColor\":\"tasksList_lowColor__0mTTe\",\"mediumColor\":\"tasksList_mediumColor__VZVrR\",\"highColor\":\"tasksList_highColor__30O4C\",\"iconCheck\":\"tasksList_iconCheck__c8N7t\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMediaQuery } from '@mui/material';\nimport Tooltip from '@mui/material/Tooltip';\nimport TaskModal from 'components/TaskModal/TaskModal';\nimport icon from 'images/tasks/icons.svg';\nimport css from './tasksList.module.scss';\n\nconst TasksList = ({ task }) => {\n  const screenMobile = useMediaQuery('(max-width: 767.9px)');\n  const screenTablet = useMediaQuery('(max-width: 1439.9px)');\n  const screenDescktop = useMediaQuery('(min-width: 1440px)');\n\n  const [openModal, setOpenModal] = useState(false);\n\n  const toggleModal = () => {\n    setOpenModal(!openModal);\n  };\n\n  const overlayClose = ({ target, currentTarget }) => {\n    if (target === currentTarget) {\n      setOpenModal(!openModal);\n    }\n  };\n\n  const truncateString = str => {\n    if (screenMobile && str.length > 3) {\n      return str.substring(0, 3) + '...';\n    }\n    if (screenTablet && str.length > 8) {\n      return str.substring(0, 8) + '...';\n    }\n    if (screenDescktop && str.length > 16) {\n      return str.substring(0, 16) + '...';\n    }\n    return str;\n  };\n\n  return (\n    <div className={css.tasksListStyle}>\n      <div key={task._id} className={css.tasksListItem} onClick={toggleModal}>\n        <p\n          className={\n            (task.priority === 'low' && css.lowColor) ||\n            (task.priority === 'medium' && css.mediumColor) ||\n            (task.priority === 'high' && css.highColor)\n          }\n        >\n          {truncateString(task.title)}\n\n          {screenMobile\n            ? null\n            : (task.status === 'toDo' && (\n                <Tooltip title=\"To Do\" placement=\"top\" arrow>\n                  <svg className={css.iconCheck}>\n                    <use href={icon + '#task-todo'}></use>\n                  </svg>\n                </Tooltip>\n              )) ||\n              (task.status === 'inProgress' && (\n                <Tooltip title=\"In progress\" placement=\"top\" arrow>\n                  <svg className={css.iconCheck}>\n                    <use href={icon + '#task-inprogress'}></use>\n                  </svg>\n                </Tooltip>\n              )) ||\n              (task.status === 'done' && (\n                <Tooltip title=\"Done\" placement=\"top\" arrow>\n                  <svg className={css.iconCheck}>\n                    <use href={icon + '#task-done'}></use>\n                  </svg>\n                </Tooltip>\n              ))}\n        </p>\n      </div>\n\n      {openModal && (\n        <TaskModal\n          task={task}\n          closeModal={toggleModal}\n          overlayClose={overlayClose}\n        />\n      )}\n    </div>\n  );\n};\n\nTasksList.propTypes = {\n  task: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n    date: PropTypes.shape({\n      start: PropTypes.string.isRequired,\n      end: PropTypes.string.isRequired,\n    }).isRequired,\n    owner: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.shape({\n        email: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        _id: PropTypes.string.isRequired,\n      }),\n    ]).isRequired,\n  }).isRequired,\n};\n\nexport default TasksList;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"modalTaskList_overlay__Gn0b1\",\"modalWrapper\":\"modalTaskList_modalWrapper__3jHuU\",\"modalBtnClose\":\"modalTaskList_modalBtnClose__VY4kk\",\"modalBox\":\"modalTaskList_modalBox__hAisU\",\"modalText\":\"modalTaskList_modalText__6U4QZ\"};","import { useMediaQuery } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport TasksList from '../TasksList/TasksList';\nimport css from './modalTaskList.module.scss';\n\nconst ModalTaskList = ({ taskList, closeModalList }) => {\n  const screenMobile = useMediaQuery('(max-width: 767.9px)');\n\n  return (\n    <>\n      <div className={css.overlay} onClick={closeModalList}></div>\n      <div className={css.modalWrapper}>\n        <div className={css.modalBox}>\n          {taskList.tasks.map((task, index) => {\n            return (\n              <div key={index}>\n                {screenMobile\n                  ? index > 0 && <TasksList task={task} />\n                  : index > 1 && <TasksList task={task} />}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n};\n\nModalTaskList.propTypes = {\n  taskList: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    tasks: PropTypes.arrayOf(\n      PropTypes.shape({\n        _id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired,\n        priority: PropTypes.string.isRequired,\n        date: PropTypes.shape({\n          start: PropTypes.string.isRequired,\n          end: PropTypes.string.isRequired,\n        }).isRequired,\n        owner: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.shape({\n            email: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            _id: PropTypes.string.isRequired,\n          }),\n        ]).isRequired,\n      })\n    ).isRequired,\n  }),\n  \n  closeModalList: PropTypes.func.isRequired,\n};\n\nexport default ModalTaskList;\n","// extracted by mini-css-extract-plugin\nexport default {\"styledTd\":\"daysWithTasks_styledTd__DGEua\",\"styledNumberDay\":\"daysWithTasks_styledNumberDay__OvvxE\",\"today\":\"daysWithTasks_today__sqVjM\",\"styledModalTd\":\"daysWithTasks_styledModalTd__ve0BM\",\"burgerListTasks\":\"daysWithTasks_burgerListTasks__AZIKv\"};","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { isToday, parseISO } from 'date-fns';\nimport { useMediaQuery } from '@mui/material';\nimport { formattedDay } from 'hooks/fotmattedDay';\nimport TasksList from '../TasksList/TasksList';\nimport ModalTaskList from '../ModalTaskList/ModalTaskList';\nimport css from './daysWithTasks.module.scss';\n\nconst DaysWithTasks = ({ day, handleClick }) => {\n  const screenMobile = useMediaQuery('(max-width: 767.9px)');\n  const [openModal, setOpenModal] = useState(false);\n\n  useEffect(() => {\n    const closeModalList = ({ code }) => {\n      if (code === 'Escape' && openModal) {\n        setOpenModal(!openModal);\n      }\n    };\n    window.addEventListener('keydown', closeModalList);\n    return () => {\n      window.removeEventListener('keydown', closeModalList);\n    };\n  }, [openModal]);\n\n  const openModalList = () => {\n    setOpenModal(!openModal);\n  };\n\n  const closeModalList = ({ target, currentTarget }) => {\n    if (target === currentTarget) {\n      setOpenModal(!openModal);\n    }\n  };\n\n  return (\n    <td className={css.styledTd} onClick={e => handleClick(e, day.date)}>\n      <p\n        className={\n          isToday(parseISO(day.date)) ? css.today : css.styledNumberDay\n        }\n        onClick={e => handleClick(e, day.date)}\n      >\n        {formattedDay(day.date)}\n      </p>\n\n      {day.tasks.length > 0 ? (\n        <>\n          {day.tasks.map((task, index) => {\n            return (\n              <div key={index}>\n                {screenMobile\n                  ? index === 0 && <TasksList task={task} />\n                  : index <= 1 && <TasksList task={task} />}\n              </div>\n            );\n          })}\n\n          {screenMobile && day.tasks.length > 1 ? (\n            <p className={css.burgerListTasks} onClick={openModalList}>\n              +{day.tasks.length - 1} ...\n            </p>\n          ) : !screenMobile && day.tasks.length > 2 ? (\n            <p className={css.burgerListTasks} onClick={openModalList}>\n              +{day.tasks.length - 2} tasks\n            </p>\n          ) : null}\n        </>\n      ) : null}\n\n      {openModal && (\n        <div className={css.styledModalTd}>\n          <ModalTaskList closeModalList={closeModalList} taskList={day} />\n        </div>\n      )}\n    </td>\n  );\n};\n\nDaysWithTasks.propTypes = {\n  day: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    tasks: PropTypes.arrayOf(\n      PropTypes.shape({\n        _id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired,\n        priority: PropTypes.string.isRequired,\n        date: PropTypes.shape({\n          start: PropTypes.string.isRequired,\n          end: PropTypes.string.isRequired,\n        }).isRequired,\n        owner: PropTypes.oneOfType([\n          PropTypes.string,\n          PropTypes.shape({\n            email: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            _id: PropTypes.string.isRequired,\n          }),\n        ]).isRequired,\n      })\n    ).isRequired,\n  }),\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default DaysWithTasks;\n","// extracted by mini-css-extract-plugin\nexport default {\"calendarTableWrapper\":\"calendarTable_calendarTableWrapper__idOhD\",\"calendarTableStyle\":\"calendarTable_calendarTableStyle__7uTI4\",\"claendarTableBody\":\"calendarTable_claendarTableBody__Jrm6I\"};","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { useDaysOfMonth } from 'hooks/useDaysOfMonth';\nimport { setDate } from 'redux/date/dateSlice';\nimport DaysWithTasks from './DaysWithTasks/DaysWithTasks';\nimport css from './calendarTable.module.scss';\n\nconst CalendarTable = ({ tasks, currentDate }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { daysOfMonth, firstDayOfMonth } = useDaysOfMonth(currentDate);\n\n  const daysWithTasks = daysOfMonth.map(day => ({\n    date: format(day, 'yyyy-MM-dd'),\n    tasks: tasks.filter(\n      task => task.date.start.slice(0, 10) === format(day, 'yyyy-MM-dd')\n    ),\n  }));\n\n  const handleClick = (e, date) => {\n    const { currentTarget, target } = e;\n\n    if (currentTarget === target) {\n      dispatch(setDate(date));\n      navigate(`/calendar/day/${date}`);\n    }\n  };\n\n  const rows = [];\n  const EmptyCells = firstDayOfMonth => {\n    return Array.from({ length: firstDayOfMonth }, (_, index) => (\n      <td key={`empty-${index}`}></td>\n    ));\n  };\n\n  let cells = EmptyCells(firstDayOfMonth);\n\n  daysWithTasks.forEach((day, index) => {\n    cells.push(\n      <DaysWithTasks key={index} day={day} handleClick={handleClick} />\n    );\n\n    if (cells.length === 7 || index === daysWithTasks.length - 1) {\n      rows.push(<tr key={day.date}>{cells}</tr>);\n      cells = [];\n    }\n  });\n\n  return (\n    <div className={css.calendarTableWrapper}>\n      <table className={css.calendarTableStyle}>\n        <tbody className={css.claendarTableBody}>{rows}</tbody>\n      </table>\n    </div>\n  );\n};\n\nCalendarTable.propTypes = {\n  tasks: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n      priority: PropTypes.string.isRequired,\n      date: PropTypes.shape({\n        start: PropTypes.string.isRequired,\n        end: PropTypes.string.isRequired,\n      }).isRequired,\n      owner: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({\n          email: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          _id: PropTypes.string.isRequired,\n        }),\n      ]).isRequired,\n    }).isRequired\n  ).isRequired,\n\n  currentDate: PropTypes.string.isRequired,\n};\n\nexport default CalendarTable;\n","// extracted by mini-css-extract-plugin\nexport default {\"choosedMonthWrapper\":\"choosedMonth_choosedMonthWrapper__gJPgY\"};","import { useSelector } from 'react-redux';\nimport { isWithinInterval } from 'date-fns';\nimport { useDaysOfMonth } from 'hooks/useDaysOfMonth';\nimport { selectDate } from 'redux/date/dateSelectors';\nimport { selectArrTasks } from 'redux/tasks/tasksSelectors';\nimport MonthCalendarHead from './MonthCalendarHead/MonthCalendarHead';\nimport CalendarTable from './CalendarTable/CalendarTable';\nimport css from './choosedMonth.module.scss';\n\nconst ChoosedMonth = () => {\n  const currentDate = useSelector(selectDate);\n\n  const tasks = useSelector(selectArrTasks);\n\n  const { startMonth, endMonth } = useDaysOfMonth(currentDate);\n\n  const filteredDates = tasks.filter(task => {\n    const dateObj = new Date(task.date.start);\n    return isWithinInterval(dateObj, { start: startMonth, end: endMonth });\n  });\n\n  return (\n    <>\n      <MonthCalendarHead />\n      <div className={css.choosedMonthWrapper}>\n        <CalendarTable tasks={filteredDates} currentDate={currentDate} />\n      </div>\n    </>\n  );\n};\n\nexport default ChoosedMonth;\n"],"names":["useDaysOfMonth","currentDate","startMonth","startOfMonth","Date","endMonth","endOfMonth","firstDayOfMonth","getDay","daysOfMonth","dirtyInterval","options","_options$step","requiredArgs","arguments","interval","startDate","toDate","start","endTime","end","getTime","RangeError","dates","setHours","step","Number","isNaN","push","setDate","getDate","eachDayOfInterval","screenMobile","useMediaQuery","className","css","isToday","dirtyDate","isSameDay","now","formattedDay","date","day","split","startsWith","slice","str","task","screenTablet","screenDescktop","useState","openModal","setOpenModal","toggleModal","onClick","priority","title","length","substring","status","Tooltip","placement","arrow","href","icon","_id","TaskModal","closeModal","overlayClose","target","currentTarget","taskList","closeModalList","tasks","map","index","handleClick","useEffect","code","window","addEventListener","removeEventListener","openModalList","e","parseISO","dispatch","useDispatch","navigate","useNavigate","daysWithTasks","format","filter","rows","cells","Array","from","_","EmptyCells","forEach","useSelector","selectDate","selectArrTasks","filteredDates","dateObj","isWithinInterval"],"sourceRoot":""}